syntax = "proto3";

package sgnl.grpc_proxy.v1;

option go_package = "github.com/sgnl-ai/adapter-framework/pkg/grpc_proxy/v1";

import "proto/grpc_proxy/v1/http.proto";
//import "proto/grpc_proxy/v1/sql.proto";
//import "proto/grpc_proxy/v1/ldap.proto";

// ProxyService is a gRPC service implemented by the Connector Service to
// process proxied requests from the Adapters and Action Handlers and
// relaying them to the remote on-premises Connectors.
service ProxyService {
  // ProxyRequest forwards a request through the proxy
  rpc ProxyRequest(ProxyRequestMessage) returns (Response) {}
}

// Request represents a request to be proxied
message Request {
  oneof request_type {
    sgnl.grpc_proxy.v1.HTTPRequest http_request = 1;
    //sgnl.grpc_proxy.v1.SQLQueryRequest sql_query_req = 2;
    //sgnl.grpc_proxy.v1.LDAPSearchRequest ldap_search_request = 3;
  }
}

// Response represents a response from the proxy
message Response {
  string error = 1;
  oneof response_type {
    sgnl.grpc_proxy.v1.HTTPResponse http_response = 2;
    //sgnl.grpc_proxy.v1.SQLQueryResponse sql_query_response = 3;
    //sgnl.grpc_proxy.v1.LDAPSearchResponse ldap_search_response = 4;
  }
}

// ProxyRequestMessage represents a request to be proxied to a specific connector
message ProxyRequestMessage {
  Request request = 1;
  string connector_id = 2;
  string client_id = 3;
  string tenant_id = 4;
}
