name: Go Build and Test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CODE_COVERAGE_THRESHOLD: 60

# Cancel previous workflows on the PR branch when there are multiple fast commits.
# `head_ref` is the name of the PR branch and is defined only on pushes to a PR branch. Thus, it
# creates a concurrency group for all commits to a PR branch, cancelling previous workflows.
# When a PR is merged into main, `head_ref` is undefined, so `run_id` is used and a unique
# concurrency group is created for each commit to main, meaning no previous workflows are cancelled.
# Reference: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ github.event_name == 'pull_request' }}
        name: Checkout repository (pull_request) âœ…
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - if: ${{ github.event_name == 'push' }}
        name: Checkout repository (push) âœ…
        uses: actions/checkout@v4
      
      - name: Run tests and code coverage ðŸ§ª
        run: docker run --rm --network="host" -v ./:/src -w /src golang:1.21.3-bookworm go test -coverprofile=coverage.txt -covermode=atomic -v ./...

      # CodeCov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  check-success:
    runs-on: ubuntu-latest
    needs: build-and-test
    name: check-build-test-status
    if: ${{ always() }} # This makes job to run always even if build-test skip or fail
    steps:
      - name: exit-if-build-test-fail
        run: |
          if [ "${{ needs.build-and-test.result }}" != "success" ]; then
            exit 1
          fi
